class Solution {
    public int minMeetingRooms(int[][] intervals) {
        
        if(intervals.length == 0)
            return 0;
        
        Arrays.sort(intervals, (a,b) -> Integer.compare(a[0],b[0]));
        
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        
        for(int interval[] : intervals)
        {  
            if(pq.size() == 0)   // first meeting
                pq.add(interval[1]);
            
            else
            {
                if(pq.peek() > interval[0]) // new room created
                    pq.add(interval[1]);
                
                else
                {
                    pq.poll();
                    pq.add(interval[1]); // old room occupied again
                }
            }
        }
        
        return pq.size();
        
        
    }
}


//https://www.youtube.com/watch?v=NKf1OJhEZj0
